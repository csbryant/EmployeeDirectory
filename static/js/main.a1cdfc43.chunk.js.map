{"version":3,"sources":["components/Header/index.js","components/Cards/index.js","components/Sortings/index.js","components/Nav/index.js","utils/API.js","components/Main/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","Cards","users","formatDate","date","dateArray","split","year","join","undefined","name","map","login","picture","phone","email","dob","data-th","src","medium","alt","first","last","href","target","uuid","Sortings","headings","handleSort","id","width","style","onClick","toLowerCase","Nav","handleSearchChange","type","placeholder","aria-label","onChange","e","axios","get","Main","state","order","filteredUsers","heading","setState","sortedUsers","sort","a","b","localeCompare","event","console","log","value","filter","filteredList","item","Object","values","indexOf","API","then","results","data","this","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a1cdfc43.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"./Header.css\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <h1>Employee Directory</h1>\n        <p>Click on each heading or use the search box to organize and narrow your results.</p>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport \"./Cards.css\";\n\nfunction Cards({ users }) {\n  function formatDate(date) {\n    const dateArray = date.split(\"-\");\n    const year = dateArray[0];\n    const month = dateArray[1];\n    const dayArray = dateArray[2].split(\"T\");\n    const day = dayArray[0];\n    const formattedDate = [month, day, year].join(\"-\");\n    return formattedDate;\n  }\n\n  return (\n    <tbody>\n      {users[0] !== undefined && users[0].name !== undefined ? (\n        users.map(({ login, name, picture, phone, email, dob }) => {\n          return (\n            <tr key={login.uuid}>\n              <td data-th=\"Image\" className=\"align-middle\">\n                <img\n                  src={picture.medium}\n                  alt={\"profile image for \" + name.first + \" \" + name.last}\n                  className=\"img-responsive\"\n                />\n              </td>\n              <td data-th=\"Name\" className=\"employee-names align-middle\">\n                {name.first} {name.last}\n              </td>\n              <td data-th=\"Phone\" className=\"align-middle\">\n                {phone}\n              </td>\n              <td data-th=\"Email\" className=\"align-middle\">\n                <a href={\"mailto:\" + email} target=\"__blank\">\n                  {email}\n                </a>\n              </td>\n              <td data-th=\"DOB\" className=\"align-middle\">\n                {formatDate(dob.date)}\n              </td>\n            </tr>\n          );\n        })\n      ) : (\n        <></>\n      )}\n    </tbody>\n  );\n}\n\nexport default Cards;\n","import React from \"react\";\nimport Cards from \"../Cards\";\nimport \"./Sortings.css\";\n\nfunction Sortings({ headings, users, handleSort }) {\n  return (\n    <div className=\"sortings mt-5\">\n      <table\n        id=\"table\"\n        className=\"table table-striped table-hover\"\n      >\n        <thead>\n          <tr>\n            {headings.map(({ name, width }) => {\n              return (\n                <th\n                  className=\"col\"\n                  key={name}\n                  style={{ width }}\n                  onClick={() => {\n                    handleSort(name.toLowerCase());\n                  }}\n                >\n                  {name}\n                  <span className=\"pointer\"></span>\n                </th>\n              );\n            })}\n          </tr>\n        </thead>\n\n        <Cards users={users} />\n      </table>\n    </div>\n  );\n}\n\nexport default Sortings;\n","import React from \"react\";\nimport \"./Nav.css\";\n\nfunction Nav({ handleSearchChange }) {\n  return (\n    <nav className=\"navbar navbar-expand navbar-light bg-light\">\n      <div className=\"navbar-collapse row\" id=\"navbarNav\">\n        <div className=\"searchbox\">\n          <form className=\"form-inline\">\n            <input\n              className=\"form-control\"\n              type=\"search\"\n              placeholder=\"Search\"\n              aria-label=\"Search\"\n              onChange={e => handleSearchChange(e)}\n            />\n          </form>\n        </div>\n      </div>\n    </nav>\n  );\n}\nexport default Nav;\n","import axios from \"axios\";\n\nexport default {\n  // Gets all users\n  getUsers: function() {\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\n  }\n};\n","import React, { Component } from \"react\";\nimport Sortings from \"../Sortings\";\nimport Nav from \"../Nav\";\nimport API from \"../../utils/API\";\nimport \"./Main.css\";\n\nexport default class Main extends Component {\n  state = {\n    users: [{}],\n    order: \"descend\",\n    filteredUsers: [{}]\n  }\n\n  headings = [\n    { name: \"Image\", width: \"10%\" },\n    { name: \"Name\", width: \"10%\" },\n    { name: \"Phone\", width: \"20%\" },\n    { name: \"Email\", width: \"20%\" },\n    { name: \"DOB\", width: \"10%\" }\n  ]\n\n  handleSort = heading => {\n    if (this.state.order === \"descend\") {\n      this.setState({\n        order: \"ascend\"\n      })\n    } else {\n      this.setState({\n        order: \"descend\"\n      })\n    }\n\n    const compareFnc = (a, b) => {\n      if (this.state.order === \"ascend\") {\n        if (a[heading] === undefined) {\n          return 1;\n        } else if (b[heading] === undefined) {\n          return -1;\n        } else if (heading === \"phone\") {\n          return a[heading].localeCompare(b[heading]);\n        } else if (heading === \"email\") {\n          return a[heading].localeCompare(b[heading]);\n        } else if (heading === \"dob\") {\n          return a[heading].date.localeCompare(b[heading].date);\n        } else if (heading === \"name\") {\n          return a[heading].first.localeCompare(b[heading].first);\n        } else {\n          return a[heading] - b[heading];\n        }\n      } else {\n        if (a[heading] === undefined) {\n          return 1;\n        } else if (b[heading] === undefined) {\n          return -1;\n        } else if (heading === \"phone\") {\n          return b[heading].localeCompare(a[heading]);\n        } else if (heading === \"email\") {\n          return b[heading].localeCompare(a[heading]);\n        } else if (heading === \"dob\") {\n          return b[heading].date.localeCompare(a[heading].date);\n        }\n        else if (heading === \"name\") {\n          return b[heading].first.localeCompare(a[heading].first);\n        } else {\n          return b[heading] - a[heading];\n        }\n      }\n\n    }\n    const sortedUsers = this.state.filteredUsers.sort(compareFnc);\n    this.setState({ filteredUsers: sortedUsers });\n  }\n\n  handleSearchChange = event => {\n    console.log(event.target.value);\n    const filter = event.target.value;\n    const filteredList = this.state.users.filter(item => {\n      let values = Object.values(item)\n        .join(\"\")\n        .toLowerCase();\n      return values.indexOf(filter.toLowerCase()) !== -1;\n    });\n    this.setState({ filteredUsers: filteredList });\n  }\n\n  componentDidMount() {\n    API.getUsers().then(results => {\n      console.log(results);\n      this.setState({\n        users: results.data.results,\n        filteredUsers: results.data.results\n      });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <>\n          <Nav handleSearchChange={this.handleSearchChange} />\n          <div className=\"main\">\n            <Sortings\n              headings={this.headings}\n              users={this.state.filteredUsers}\n              handleSort={this.handleSort}\n            />\n          </div>\n        </>\n      </>\n    );\n  }\n}","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n        <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}